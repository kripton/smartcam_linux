# Makefile.in generated by automake 1.10.2 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/smartcam
pkglibdir = $(libdir)/smartcam
pkgincludedir = $(includedir)/smartcam
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = smartcam$(EXEEXT)
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_smartcam_OBJECTS = smartcam-smartcam.$(OBJEXT) \
	smartcam-SmartEngine.$(OBJEXT) smartcam-CommHandler.$(OBJEXT) \
	smartcam-UIHandler.$(OBJEXT) smartcam-UserSettings.$(OBJEXT) \
	smartcam-JpegHandler.$(OBJEXT)
smartcam_OBJECTS = $(am_smartcam_OBJECTS)
smartcam_DEPENDENCIES =
smartcam_LINK = $(CXXLD) $(smartcam_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(smartcam_SOURCES)
DIST_SOURCES = $(smartcam_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/dediu/Desktop/smartcam-1.4.0/missing --run aclocal-1.10
ALL_LINGUAS = 
AMTAR = ${SHELL} /home/dediu/Desktop/smartcam-1.4.0/missing --run tar
AUTOCONF = ${SHELL} /home/dediu/Desktop/smartcam-1.4.0/missing --run autoconf
AUTOHEADER = ${SHELL} /home/dediu/Desktop/smartcam-1.4.0/missing --run autoheader
AUTOMAKE = ${SHELL} /home/dediu/Desktop/smartcam-1.4.0/missing --run automake-1.10
AWK = gawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DATADIRNAME = share
DBUS_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
DBUS_LIBS = -L//lib -ldbus-glib-1 -ldbus-1 -lgobject-2.0 -lglib-2.0  
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GCONF_CFLAGS = -DORBIT2=1 -pthread -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GCONF_LIBS = -lgconf-2 -lglib-2.0  
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GLIB_LIBS = -lglib-2.0  
GMSGFMT = /usr/bin/msgfmt
GREP = /bin/grep
GTHREAD_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
GTHREAD_LIBS = -pthread -lgthread-2.0 -lrt -lglib-2.0  
GTK_CFLAGS = -D_REENTRANT -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/directfb -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/atk-1.0  
GTK_LIBS = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lgio-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0  
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTLTOOL_EXTRACT = /usr/bin/intltool-extract
INTLTOOL_MERGE = /usr/bin/intltool-merge
INTLTOOL_PERL = /usr/bin/perl
INTLTOOL_UPDATE = /usr/bin/intltool-update
LDFLAGS = -Wl,-z,defs
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/dediu/Desktop/smartcam-1.4.0/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
MSGFMT = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
OBJEXT = o
PACKAGE = smartcam
PACKAGE_BUGREPORT = deionut@yahoo.com
PACKAGE_NAME = SmartCam
PACKAGE_STRING = SmartCam 1.4.0
PACKAGE_TARNAME = smartcam
PACKAGE_VERSION = 1.4.0
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
SET_MAKE = 
SHELL = /bin/bash
STRIP = 
USE_NLS = yes
VERSION = 1.4.0
XGETTEXT = /usr/bin/xgettext
abs_builddir = /home/dediu/Desktop/smartcam-1.4.0/src
abs_srcdir = /home/dediu/Desktop/smartcam-1.4.0/src
abs_top_builddir = /home/dediu/Desktop/smartcam-1.4.0
abs_top_srcdir = /home/dediu/Desktop/smartcam-1.4.0
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = i486-linux-gnu
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${prefix}/share/info
install_sh = $(SHELL) /home/dediu/Desktop/smartcam-1.4.0/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${prefix}/share/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
AM_CPPFLAGS = -DPACKAGE_DATADIR=\"$(pkgdatadir)\" -DDATADIR=\"$(datadir)\"
smartcam_SOURCES = \
    smartcam.cpp SmartEngine.cpp SmartEngine.h \
    CommHandler.cpp CommHandler.h \
    UIHandler.cpp UIHandler.h \
    UserSettings.cpp UserSettings.h \
    JpegHandler.cpp JpegHandler.h

smartcam_CXXFLAGS = -D_REENTRANT -I/usr/include/gtk-2.0 -I/usr/lib/gtk-2.0/include -I/usr/include/cairo -I/usr/include/pango-1.0 -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/directfb -I/usr/include/libpng12 -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include -I/usr/include/atk-1.0   -pthread -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include   -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include   -DORBIT2=1 -pthread -I/usr/include/gconf/2 -I/usr/include/orbit-2.0 -I/usr/include/dbus-1.0 -I/usr/lib/dbus-1.0/include -I/usr/include/glib-2.0 -I/usr/lib/glib-2.0/include  
smartcam_LDADD = -lgtk-x11-2.0 -lgdk-x11-2.0 -latk-1.0 -lpangoft2-1.0 -lgdk_pixbuf-2.0 -lm -lpangocairo-1.0 -lgio-2.0 -lcairo -lpango-1.0 -lfreetype -lfontconfig -lgobject-2.0 -lgmodule-2.0 -lglib-2.0   -pthread -lgthread-2.0 -lrt -lglib-2.0   -L//lib -ldbus-glib-1 -ldbus-1 -lgobject-2.0 -lglib-2.0   -lgconf-2 -lglib-2.0   -lbluetooth -ljpeg

#dbus
BUILT_SOURCES = smartcam-dbus.h
# We don't want to install this header
noinst_HEADERS = $(BUILT_SOURCES)

# Correctly clean the generated headers, but keep the xml description
CLEANFILES = $(BUILT_SOURCES)
EXTRA_DIST = smartcam-dbus.xml
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
smartcam$(EXEEXT): $(smartcam_OBJECTS) $(smartcam_DEPENDENCIES) 
	@rm -f smartcam$(EXEEXT)
	$(smartcam_LINK) $(smartcam_OBJECTS) $(smartcam_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/smartcam-CommHandler.Po
include ./$(DEPDIR)/smartcam-JpegHandler.Po
include ./$(DEPDIR)/smartcam-SmartEngine.Po
include ./$(DEPDIR)/smartcam-UIHandler.Po
include ./$(DEPDIR)/smartcam-UserSettings.Po
include ./$(DEPDIR)/smartcam-smartcam.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

smartcam-smartcam.o: smartcam.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -MT smartcam-smartcam.o -MD -MP -MF $(DEPDIR)/smartcam-smartcam.Tpo -c -o smartcam-smartcam.o `test -f 'smartcam.cpp' || echo '$(srcdir)/'`smartcam.cpp
	mv -f $(DEPDIR)/smartcam-smartcam.Tpo $(DEPDIR)/smartcam-smartcam.Po
#	source='smartcam.cpp' object='smartcam-smartcam.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -c -o smartcam-smartcam.o `test -f 'smartcam.cpp' || echo '$(srcdir)/'`smartcam.cpp

smartcam-smartcam.obj: smartcam.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -MT smartcam-smartcam.obj -MD -MP -MF $(DEPDIR)/smartcam-smartcam.Tpo -c -o smartcam-smartcam.obj `if test -f 'smartcam.cpp'; then $(CYGPATH_W) 'smartcam.cpp'; else $(CYGPATH_W) '$(srcdir)/smartcam.cpp'; fi`
	mv -f $(DEPDIR)/smartcam-smartcam.Tpo $(DEPDIR)/smartcam-smartcam.Po
#	source='smartcam.cpp' object='smartcam-smartcam.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -c -o smartcam-smartcam.obj `if test -f 'smartcam.cpp'; then $(CYGPATH_W) 'smartcam.cpp'; else $(CYGPATH_W) '$(srcdir)/smartcam.cpp'; fi`

smartcam-SmartEngine.o: SmartEngine.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -MT smartcam-SmartEngine.o -MD -MP -MF $(DEPDIR)/smartcam-SmartEngine.Tpo -c -o smartcam-SmartEngine.o `test -f 'SmartEngine.cpp' || echo '$(srcdir)/'`SmartEngine.cpp
	mv -f $(DEPDIR)/smartcam-SmartEngine.Tpo $(DEPDIR)/smartcam-SmartEngine.Po
#	source='SmartEngine.cpp' object='smartcam-SmartEngine.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -c -o smartcam-SmartEngine.o `test -f 'SmartEngine.cpp' || echo '$(srcdir)/'`SmartEngine.cpp

smartcam-SmartEngine.obj: SmartEngine.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -MT smartcam-SmartEngine.obj -MD -MP -MF $(DEPDIR)/smartcam-SmartEngine.Tpo -c -o smartcam-SmartEngine.obj `if test -f 'SmartEngine.cpp'; then $(CYGPATH_W) 'SmartEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/SmartEngine.cpp'; fi`
	mv -f $(DEPDIR)/smartcam-SmartEngine.Tpo $(DEPDIR)/smartcam-SmartEngine.Po
#	source='SmartEngine.cpp' object='smartcam-SmartEngine.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -c -o smartcam-SmartEngine.obj `if test -f 'SmartEngine.cpp'; then $(CYGPATH_W) 'SmartEngine.cpp'; else $(CYGPATH_W) '$(srcdir)/SmartEngine.cpp'; fi`

smartcam-CommHandler.o: CommHandler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -MT smartcam-CommHandler.o -MD -MP -MF $(DEPDIR)/smartcam-CommHandler.Tpo -c -o smartcam-CommHandler.o `test -f 'CommHandler.cpp' || echo '$(srcdir)/'`CommHandler.cpp
	mv -f $(DEPDIR)/smartcam-CommHandler.Tpo $(DEPDIR)/smartcam-CommHandler.Po
#	source='CommHandler.cpp' object='smartcam-CommHandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -c -o smartcam-CommHandler.o `test -f 'CommHandler.cpp' || echo '$(srcdir)/'`CommHandler.cpp

smartcam-CommHandler.obj: CommHandler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -MT smartcam-CommHandler.obj -MD -MP -MF $(DEPDIR)/smartcam-CommHandler.Tpo -c -o smartcam-CommHandler.obj `if test -f 'CommHandler.cpp'; then $(CYGPATH_W) 'CommHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/CommHandler.cpp'; fi`
	mv -f $(DEPDIR)/smartcam-CommHandler.Tpo $(DEPDIR)/smartcam-CommHandler.Po
#	source='CommHandler.cpp' object='smartcam-CommHandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -c -o smartcam-CommHandler.obj `if test -f 'CommHandler.cpp'; then $(CYGPATH_W) 'CommHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/CommHandler.cpp'; fi`

smartcam-UIHandler.o: UIHandler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -MT smartcam-UIHandler.o -MD -MP -MF $(DEPDIR)/smartcam-UIHandler.Tpo -c -o smartcam-UIHandler.o `test -f 'UIHandler.cpp' || echo '$(srcdir)/'`UIHandler.cpp
	mv -f $(DEPDIR)/smartcam-UIHandler.Tpo $(DEPDIR)/smartcam-UIHandler.Po
#	source='UIHandler.cpp' object='smartcam-UIHandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -c -o smartcam-UIHandler.o `test -f 'UIHandler.cpp' || echo '$(srcdir)/'`UIHandler.cpp

smartcam-UIHandler.obj: UIHandler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -MT smartcam-UIHandler.obj -MD -MP -MF $(DEPDIR)/smartcam-UIHandler.Tpo -c -o smartcam-UIHandler.obj `if test -f 'UIHandler.cpp'; then $(CYGPATH_W) 'UIHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/UIHandler.cpp'; fi`
	mv -f $(DEPDIR)/smartcam-UIHandler.Tpo $(DEPDIR)/smartcam-UIHandler.Po
#	source='UIHandler.cpp' object='smartcam-UIHandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -c -o smartcam-UIHandler.obj `if test -f 'UIHandler.cpp'; then $(CYGPATH_W) 'UIHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/UIHandler.cpp'; fi`

smartcam-UserSettings.o: UserSettings.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -MT smartcam-UserSettings.o -MD -MP -MF $(DEPDIR)/smartcam-UserSettings.Tpo -c -o smartcam-UserSettings.o `test -f 'UserSettings.cpp' || echo '$(srcdir)/'`UserSettings.cpp
	mv -f $(DEPDIR)/smartcam-UserSettings.Tpo $(DEPDIR)/smartcam-UserSettings.Po
#	source='UserSettings.cpp' object='smartcam-UserSettings.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -c -o smartcam-UserSettings.o `test -f 'UserSettings.cpp' || echo '$(srcdir)/'`UserSettings.cpp

smartcam-UserSettings.obj: UserSettings.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -MT smartcam-UserSettings.obj -MD -MP -MF $(DEPDIR)/smartcam-UserSettings.Tpo -c -o smartcam-UserSettings.obj `if test -f 'UserSettings.cpp'; then $(CYGPATH_W) 'UserSettings.cpp'; else $(CYGPATH_W) '$(srcdir)/UserSettings.cpp'; fi`
	mv -f $(DEPDIR)/smartcam-UserSettings.Tpo $(DEPDIR)/smartcam-UserSettings.Po
#	source='UserSettings.cpp' object='smartcam-UserSettings.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -c -o smartcam-UserSettings.obj `if test -f 'UserSettings.cpp'; then $(CYGPATH_W) 'UserSettings.cpp'; else $(CYGPATH_W) '$(srcdir)/UserSettings.cpp'; fi`

smartcam-JpegHandler.o: JpegHandler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -MT smartcam-JpegHandler.o -MD -MP -MF $(DEPDIR)/smartcam-JpegHandler.Tpo -c -o smartcam-JpegHandler.o `test -f 'JpegHandler.cpp' || echo '$(srcdir)/'`JpegHandler.cpp
	mv -f $(DEPDIR)/smartcam-JpegHandler.Tpo $(DEPDIR)/smartcam-JpegHandler.Po
#	source='JpegHandler.cpp' object='smartcam-JpegHandler.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -c -o smartcam-JpegHandler.o `test -f 'JpegHandler.cpp' || echo '$(srcdir)/'`JpegHandler.cpp

smartcam-JpegHandler.obj: JpegHandler.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -MT smartcam-JpegHandler.obj -MD -MP -MF $(DEPDIR)/smartcam-JpegHandler.Tpo -c -o smartcam-JpegHandler.obj `if test -f 'JpegHandler.cpp'; then $(CYGPATH_W) 'JpegHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/JpegHandler.cpp'; fi`
	mv -f $(DEPDIR)/smartcam-JpegHandler.Tpo $(DEPDIR)/smartcam-JpegHandler.Po
#	source='JpegHandler.cpp' object='smartcam-JpegHandler.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(smartcam_CXXFLAGS) $(CXXFLAGS) -c -o smartcam-JpegHandler.obj `if test -f 'JpegHandler.cpp'; then $(CYGPATH_W) 'JpegHandler.cpp'; else $(CYGPATH_W) '$(srcdir)/JpegHandler.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-local mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-info: install-info-am

install-man:

install-pdf: install-pdf-am

install-ps: install-ps-am

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-local ctags distclean distclean-compile \
	distclean-generic distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic pdf pdf-am ps ps-am tags uninstall \
	uninstall-am uninstall-binPROGRAMS


#Rule to generate the binding headers
smartcam-dbus.h:  smartcam-dbus.xml
	dbus-binding-tool --prefix=smartcam_dbus --mode=glib-server $<> $@

clean-local :
	rm -f *~
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
